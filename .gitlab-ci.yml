workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

stages:
  - init
  - quality # Generate quality report
  - test # Step for SAST
  - sonarqube # Send report to SonarQube

# Default configuration for all jobs
default:
  tags:
    - Usine_Logicielle
  timeout: 30 minutes

variables:
  DEBUG:
    value: 'false'
    description: "Afficher des logs supplémentaires"

  TAG_IMAGE_CONDA: "publicremotes-docker/continuumio/miniconda3:23.5.2-0"
  TAG_IMAGE_SONAR: "publicremotes-docker/sonarsource/sonar-scanner-cli:4.5"
  CI: "true"
  JFROG_CLI_HOME_DIR: ".jfrog/"
  JFROG_CLI_TEMP_DIR: ".jfrog_tmp"
  JFROG_VERSION: "v2/2.14.0"
  JFROG_OS: "jfrog-cli-linux-amd64"
  JFROG_CLI_BUILD_NAME: "${CI_PROJECT_PATH}_${CI_COMMIT_REF_SLUG}_gitlab-ci"
  JFROG_CLI_BUILD_NUMBER: "${CI_PIPELINE_ID}"
 
  ARTIFACTORY_BUILD_URL: "https://${artifactory_host}/artifactory/webapp/#/builds/${JFROG_CLI_BUILD_NAME}/${JFROG_CLI_BUILD_NUMBER}"
  CI_TEMPLATE_REGISTRY_HOST: "${ARTIFACTORY_HOST}/publicremotes-docker"
  PIP_INDEX_URL: "https://${ARTIFACTORY_USER}:${ARTIFACTORY_TOKEN}@${ARTIFACTORY_HOST}/artifactory/api/pypi/pypi/simple"
  PIP_CERT: "${CNES_CERTIFICATE}"
  PIP_CACHE_DIR: ".pip-cache/"
  CONDA_ENVS_DIRS: ".conda/envs"
  CONDA_SSL_VERIFY: "${CNES_CERTIFICATE}"
  PIP_SSL_VERIFY: "${CNES_CERTIFICATE}"
  REQUESTS_CA_BUNDLE: "${CNES_CERTIFICATE}"

include:
  - template: Jobs/SAST.latest.gitlab-ci.yml
  - project: "usinelogicielle/public/gitlab-ci-templates" # Inclut le stage de qualité sonarqube
    ref: v1.1.2 # référence de tag
    file: "jobs/sonarqube-gitlab-ci.yml" 

build-env:
  stage: init
  image: ${ARTIFACTORY_HOST}/${TAG_IMAGE_CONDA}
  before_script:
    - export no_proxy=$NO_PROXY
    - export http_proxy=$HTTP_PROXY
    - export https_proxy=$HTTP_PROXY
    - mkdir -p ${CONDA_ENVS_DIRS}
    - pip install conda-lock
  script:
    - conda-lock install --name s2shores_env conda-lock.yml
  timeout: 15 minutes
  artifacts:
    untracked: true
    expire_in: 1 day


pytest:
  stage: quality
  image: ${ARTIFACTORY_HOST}/${TAG_IMAGE_CONDA}
  script:
    - source activate s2shores_env
    - pip install --no-cache-dir --force-reinstall -e .
    - pytest -s tests --cov=s2shores --cov-report=xml:.ci-reports/coverage.xml --cov-report=term --junitxml=.ci-reports/junit-report.xml
  artifacts:
    paths:
      - ./.ci-reports/
    expire_in: 1 day

pylint_analysis:
  stage: quality
  image: ${ARTIFACTORY_HOST}/${TAG_IMAGE_CONDA}
  script:
    - source activate s2shores_env
    - pip install --no-cache-dir --force-reinstall -e .
    - pip install pylint
    - pylint s2shores/ --recursive=y --exit-zero > pylint_report.json
    - cat pylint_report.json
  artifacts:
    paths:
      - ./pylint_report.json
    expire_in: 1 day
